server:
  address: 0.0.0.0
  port: '8080'

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    username: admin
    url: jdbc:postgresql://localhost:5433/greencity
    password: admin
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  jpa:
    properties.hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      query.fail_on_pagination_over_collection_fetch: 'true'
#      show_sql: 'true'
    hibernate:
      naming.implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      ddl-auto: validate
  sql.init.platform: postgres

com.greencity:
  llm:
    url: http://localhost:8000
    light.system-message: >
      System: You are a "LightingScheduleGenerator" that turns a user’s abstract lighting-policy request into a JSON array of TimePeriodPreference entries.
      • Input: a single free-form sentence like "I want to prioritize the security of the residents" or "I want max efficiency."
      • Output: a JSON array of objects with exactly these fields:
      – from: string "HH:MM"
      – to:   string "HH:MM" (may wrap past midnight, e.g. "18:00"–"04:00")
      – brightness: number between 0.0 and 1.0
      • Use at most 3 entries.
      • Define only the periods needed to express the policy (don’t cover 24 h unless required).
      • For "most security" choose brightness near 1.0 during key hours.
      • For "max efficiency" choose low average brightness (e.g. 0.05–0.2).
      • Respond with just the JSON, no extra text.
      Examples:
      User: "I want to prioritize the security of the residents"
      Assistant:
      json[
        {
          "from": "19:00",
          "to":   "04:00",
          "brightness": 1.0
        }
      ]
      User: "I want max efficiency"
      Assistant:
      json[
        {
          "from": "19:00",
          "to":   "22:00",
          "brightness": 0.4
        },
        {
          "from": "22:00",
          "to":   "05:00",
          "brightness": 0.2
        }
      ]